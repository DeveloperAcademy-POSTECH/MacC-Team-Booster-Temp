//
//  MockUpSubscribeView.swift
//  Mac_Health
//
//  Created by Ï†ïÌöåÏäπ on 11/15/23.
//

import SwiftUI

struct MockUpSubscribeView: View {
    
    @State var showTab = false
    @State var scrollOffset: CGFloat = 0.00
    @State var subscribingSheet = false
    @State var loggedIn: Bool = true
    @Binding var tabSelection: Int
    @Binding var subscribed: Bool
    @Environment(\.dismiss) var dismiss: DismissAction
    
    var introduce = """
ÏïàÎÖïÌïòÏÑ∏Ïöî! Ïö¥ÎèôÌïòÎäî Í∞úÎ∞úÏûê Ï†ïÌöåÏäπÏûÖÎãàÎã§üêµ
Ïó¨Îü¨Î∂ÑÍ≥º Ìï®Íªò Ïö¥ÎèôÌïòÍ∏∞ ÏúÑÌï¥
Ï†ú Ïö¥ÎèôÏùºÏßÄÎ•º Í≥µÏú†ÌïòÍ≤å ÎêòÏóàÏäµÎãàÎã§
"""
    //Î∞∞Ïó¥Î°ú ÎπºÏÑú Î∂àÎ†õÎ≥ÑÎ°ú Ï§Ñ ÎßûÏ∂úÏßÄ Ï∂îÌõÑ ÏàòÏ†ï ÏòàÏ†ï
    var award: Array = [
        "Wngp ÏÑúÏö∏ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ Ï≤¥Í∏â 1ÏúÑ",
        "Wngp ÏÑúÏö∏ Î≥¥ÎîîÎπåÎî© Ï≤¥Í∏â 1ÏúÑ",
        "Wngp ÏÑúÏö∏ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ Í∑∏ÎûëÌîÑÎ¶¨ 2ÏúÑ",
        "Wngp ÏÑúÏö∏ Î≥¥ÎîîÎπåÎî© Í∑∏ÎûëÌîÑÎ¶¨ 3ÏúÑ",
        "Npc ÎÇ¥Ï∏ÑÎü¥ Î≥¥ÎîîÎπåÎî© Ïò§Ìîà 4ÏúÑ",
        "Npc ÎÇ¥Ï∏ÑÎü¥ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ ÎÖ∏ÎπÑÏä§ 1ÏúÑ",
        "ÎØ∏Ïä§ÌÑ∞ Ïä§ÎàÑ 22 Ïó∞Í±¥ 1ÏúÑ",
        "ÎØ∏Ïä§ÌÑ∞ Ïä§ÎàÑ 23 Í¥ÄÏïÖ 2ÏúÑ",
    ]
    
    var body: some View {
        ZStack {
            Color.gray_900.ignoresSafeArea()
            ScrollView {
                VStack{
                    //Íµ¨ÎèÖ ÌéòÏù¥ÏßÄ ÏÑ§Î™Ö
                    IntroPage
                    //Íµ¨ÎèÖ Î≤ÑÌäº
                    subscribeButton
                    //Ïù∏ÌîåÎ£®Ïñ∏ÏÑú ÏÑ§Î™Ö
                    introInfluencer
                    bodyInformation
                    strengthInformation
                    //Î£®Ìã¥ ÎØ∏Î¶¨Î≥¥Í∏∞
                    RoutinePreview()
                        .padding(.horizontal)
                }
                .background(GeometryReader {
                    return Color.clear.preference(key: ViewOffsetKey.self, value: -$0.frame(in: .named("scroll")).origin.y)
                })
                .onPreferenceChange(ViewOffsetKey.self) { offset in
                    withAnimation {
                        if offset > UIScreen.getHeight(422) {
                            showTab = true
                        } else  {
                            showTab = false
                        }
                    }
                    scrollOffset = offset
                }
            }
            .coordinateSpace(name: "scroll")
            .overlay(
                showTab ?
                createTab() : nil, alignment: Alignment.bottom
            )
        }
        .navigationBarBackButtonHidden()
        .toolbar {
            ToolbarItem(placement: .navigationBarLeading) {
                BackButton
            }
        }
        .ignoresSafeArea(.all)
    }
    
    @ViewBuilder
    var IntroPage: some View {
        ZStack{
            topBackground
            TabView {
                ForEach(1...3, id: \.self) { idx in
                    //ÎëòÎü¨Î≥¥Í∏∞ÏóêÏÑú Íµ¨ÎèÖ Î∑∞
                    ZStack{
                        Image("RotateInfluencer\(idx)")
                            .resizable()
                            .scaledToFit()
                        LinearGradient(colors: [.gray_900,.clear, .clear, .gray_900.opacity(0.7), .gray_900], startPoint: .top, endPoint: .bottom)
                    }
                }
            }
            .tabViewStyle(.page)
            topInfluencerDescription
            
        }
    }
    
    var BackButton: some View {
        Button {
            dismiss()
        } label: {
            Image(systemName: "chevron.left")
                .foregroundColor(.label_900)
                .font(.body())
        }
    }
    
    @ViewBuilder
    var introInfluencer: some View {
        VStack{
            VStack(alignment: .leading){
                HStack {
                    Text("Ïù∏ÏÇ¨Îßê")
                        .foregroundColor(.label_900)
                        .font(.headline1())
                        .padding(.top, 20)
                    Spacer()
                }
                Text(introduce)
                    .foregroundColor(.label_800)
                    .font(.body)
                    .padding(.vertical, 10)
                Text("ÏàòÏÉÅÍ≤ΩÎ†•")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 20)
            }
            .padding(.leading)
            .frame(maxWidth: .infinity)
            //MARK: ÏûºÏù¥ ÏßÄÏö∞ÏßÄ ÎßêÎûòÏöî.
//            if seeMore == false {
//                ZStack(alignment: .top){
//                    VStack(alignment: .leading){
//                        ForEach(0..<award.count, id: \.self) { index in
//                            HStack{
//                                VStack{
//                                    Text("‚Ä¢")
//                                        .font(.body)
//                                        .foregroundColor(.label_800)
//                                    Spacer()
//                                }
//                                VStack(alignment: .leading){
//                                    HStack{
//                                        Text(award[index])
//                                            .font(.body)
//                                            .foregroundColor(.label_800)
//                                        Spacer()
//                                    }
//                                    Spacer()
//                                }
//                            }
//                            .padding(.leading, 10)
//                        }
//                    }
//                    .mask(alignment: .top){
//                        Rectangle()
//                            .frame(width: UIScreen.getWidth(350), height: UIScreen.getHeight(130))
//                    }
//                    .padding()
//                    LinearGradient(colors: [.clear, .clear, .gray_900.opacity(0.7), .gray_900], startPoint: .top, endPoint: .bottom)
//                    Button {
//                        seeMore = true
//                    } label: {
//                        VStack{
//                            Spacer()
//                                .frame(height: UIScreen.getHeight(170))
//                            Text("ÎçîÎ≥¥Í∏∞")
//                                .font(.headline1())
//                                .foregroundColor(Color.label_900)
//                        }
//                    }
//
//                }
//                .frame(width: UIScreen.getWidth(384), height: UIScreen.getHeight(150))
//                .padding(.top, 40)
//            }
//            else {
                VStack(alignment: .leading){
                    ForEach(0..<award.count, id: \.self) { index in
                        HStack {
                            VStack {
                                Text("‚Ä¢")
                                    .font(.body)
                                    .foregroundColor(.label_800)
                                Spacer()
                            }
                            VStack(alignment: .leading){
                                HStack {
                                    Text(award[index])
                                        .font(.body)
                                        .foregroundColor(.label_800)
                                    Spacer()
                                }
                                Spacer()
                            }
                        }
                        .padding(.leading, 10)
                    }
                }
                .padding()
//            }
        }
    }
    
    
    @ViewBuilder
    var subscribeButton: some View {
        FloatingButton(backgroundColor: .gray_600) {Text("ÎëòÎü¨Î≥¥Í∏∞ Ï§ë")
                        .foregroundColor(.label_400)
                        .font(.button1())
                }
                
            
        }
    
    fileprivate func createTab() -> some View {
        return subscribeButton
            .padding(.bottom, 30)
            .transition(.scale)
    }
    
    var topInfluencerDescription: some View {
        ZStack(alignment: .bottomTrailing){
            VStack{
                Spacer()
                HStack{
                    VStack(alignment: .leading, spacing: 16){
                        Text("Ï†ïÌöåÏäπÏùò Smart Routine")
                            .foregroundColor(.label_900)
                            .font(.title1())
                        Text("2022 Mr. ÏÑúÏö∏ÎåÄüèÜ")
                            .foregroundColor(.label_600)
                            .font(.body2())
                            .padding(.bottom, 40)
                    }
                    Spacer()
                }
                .padding(.leading, 20)
            }
        }
        .frame(height: UIScreen.getHeight(358))
    }
    
    var bodyInformation: some View {
        HStack{
            VStack(alignment: .leading, spacing: 5){
                Text("Ïã†Ï≤¥Ï†ïÎ≥¥")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 20)
                    .padding(.bottom, 5)
                Text("ÌÇ§: 173cm")
                    .foregroundColor(.label_800)
                    .font(.body)
                Text("Î™∏Î¨¥Í≤å: 80kg")
                    .foregroundColor(.label_800)
                    .font(.body)
            }
         Spacer()
        }
        .padding(.horizontal)
    }
    
    var strengthInformation: some View {
        HStack{
            VStack(alignment: .leading, spacing: 5){
                Text("3ÎåÄ Ï§ëÎüâ")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 20)
                    .padding(.bottom, 5)
                Text("Squat: 210kg")
                    .foregroundColor(.label_800)
                    .font(.body)
                Text("Deadlift: 280kg")
                    .foregroundColor(.label_800)
                    .font(.body)
                Text("Bench Press: 140kg")
                    .foregroundColor(.label_800)
                    .font(.body)
            }
         Spacer()
        }
        .padding(.horizontal)
    }
    
    var topBackground: some View {
        ZStack(alignment: .bottomTrailing){
            Color.gray_900.ignoresSafeArea()
            HStack{
                Spacer()
                Image("Background1")
                    .resizable()
                    .scaledToFit()
            }
        }
        .frame(height: UIScreen.getHeight(358))
        
    }
    
}


//#Preview {
//    MockUpSubscribeView()
//}
