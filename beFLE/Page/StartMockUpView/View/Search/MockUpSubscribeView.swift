//
//  MockUpSubscribeView.swift
//  beFLE
//
//  Created by Ï†ïÌöåÏäπ on 11/15/23.
//

import SwiftUI

struct MockUpSubscribeView: View {
    @State var showTab = false
    @State var scrollOffset: CGFloat = 0.00
    @State var subscribingSheet = false
    @Environment(\.dismiss) var dismiss: DismissAction
    
    var introduce = """
ÏïàÎÖïÌïòÏÑ∏Ïöî! Ïö¥ÎèôÌïòÎäî Í∞úÎ∞úÏûê Ï†ïÌöåÏäπÏûÖÎãàÎã§üêµ
Ïó¨Îü¨Î∂ÑÍ≥º Ìï®Íªò Ïö¥ÎèôÌïòÍ∏∞ ÏúÑÌï¥
Ï†ú Ïö¥ÎèôÏùºÏßÄÎ•º Í≥µÏú†ÌïòÍ≤å ÎêòÏóàÏäµÎãàÎã§
"""
    var award: Array = [
        "Wngp ÏÑúÏö∏ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ Ï≤¥Í∏â 1ÏúÑ",
        "Wngp ÏÑúÏö∏ Î≥¥ÎîîÎπåÎî© Ï≤¥Í∏â 1ÏúÑ",
        "Wngp ÏÑúÏö∏ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ Í∑∏ÎûëÌîÑÎ¶¨ 2ÏúÑ",
        "Wngp ÏÑúÏö∏ Î≥¥ÎîîÎπåÎî© Í∑∏ÎûëÌîÑÎ¶¨ 3ÏúÑ",
        "Npc ÎÇ¥Ï∏ÑÎü¥ Î≥¥ÎîîÎπåÎî© Ïò§Ìîà 4ÏúÑ",
        "Npc ÎÇ¥Ï∏ÑÎü¥ ÌÅ¥ÎûòÏãùÌîºÏßÄÌÅ¨ ÎÖ∏ÎπÑÏä§ 1ÏúÑ",
        "ÎØ∏Ïä§ÌÑ∞ Ïä§ÎàÑ 22 Ïó∞Í±¥ 1ÏúÑ",
        "ÎØ∏Ïä§ÌÑ∞ Ïä§ÎàÑ 23 Í¥ÄÏïÖ 2ÏúÑ"
    ]
    
    var body: some View {
        ZStack {
            Color.gray_900.ignoresSafeArea()
            ScrollView {
                VStack {
                    IntroPage
                    topInfluencerDescription
                    subscribeButton
                    introInfluencer
                    bodyInformation
                    strengthInformation
                    RoutinePreview()
                        .padding(.horizontal)
                }
                .background(GeometryReader { geo in
                    return Color.clear.preference(key: ViewOffsetKey.self, value: -geo.frame(in: .named("scroll")).origin.y)
                })
                .onPreferenceChange(ViewOffsetKey.self) { offset in
                    withAnimation {
                        if offset > UIScreen.getHeight(422) {
                            showTab = true
                        } else {
                            showTab = false
                        }
                    }
                    scrollOffset = offset
                }
            }
            .coordinateSpace(name: "scroll")
            .overlay(
                showTab ?
                createTab() : nil, alignment: Alignment.bottom
            )
        }
        .navigationBarBackButtonHidden()
        .toolbar {
            ToolbarItem(placement: .navigationBarLeading) {
                BackButton
            }
        }
        .ignoresSafeArea(.all)
    }
    
    @ViewBuilder
    var IntroPage: some View {
        ZStack {
            TabView {
                ForEach(1...3, id: \.self) { _ in
                    ZStack {
                        Image("bannerImage")
                            .resizable()
                            .scaledToFill()
                        LinearGradient(colors: [.clear, .clear, .clear, .clear, .clear, .gray_900.opacity(0.5), .gray_900], startPoint: .top, endPoint: .bottom)
                    }
                }
            }
            .tabViewStyle(.page)
            .frame(width: UIScreen.getWidth(390), height: UIScreen.getHeight(358))
        }
    }
    
    var BackButton: some View {
        Button {
            dismiss()
        } label: {
            Image(systemName: "chevron.left")
                .foregroundColor(.label_700)
                .font(.headline2())
        }
    }
    
    @ViewBuilder
    var introInfluencer: some View {
        VStack {
            VStack(alignment: .leading) {
                HStack {
                    Text("Ïù∏ÏÇ¨Îßê")
                        .foregroundColor(.label_900)
                        .font(.headline1())
                        .padding(.top, 30)
                    Spacer()
                }
                Text(introduce)
                    .foregroundColor(.label_800)
                    .font(.body())
                    .padding(.top, 10)
                    .lineSpacing(8.0)
                Text("ÏàòÏÉÅÍ≤ΩÎ†•")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 30)
            }
            .padding(.top, 15)
            .padding(.leading)
            .frame(maxWidth: .infinity)
            
            VStack(alignment: .leading) {
                ForEach(0..<award.count, id: \.self) { index in
                    HStack {
                        VStack {
                            Text("‚Ä¢")
                                .font(.body)
                                .foregroundColor(.label_800)
                            Spacer()
                        }
                        VStack(alignment: .leading) {
                            HStack {
                                Text(award[index])
                                    .font(.body())
                                    .foregroundColor(.label_800)
                                Spacer()
                            }
                            Spacer()
                        }
                    }
                    .padding(.leading, 10)
                }
            }
            .padding(.horizontal)
            .padding(.top, 12)
            .padding(.bottom, 5)
        }
    }

    @ViewBuilder
    var subscribeButton: some View {
        Button {
            LaunchViewModel.shared.previewLogin()
        } label: {
            FloatingButton(size: .medium, color: .green_main) {
                Text("Î°úÍ∑∏Ïù∏ÌïòÍ≥† Íµ¨ÎèÖÌïòÍ∏∞")
                    .foregroundColor(.gray_900)
                    .font(.button1())
            }
        }
    }
    
    fileprivate func createTab() -> some View {
        return subscribeButton
            .padding(.bottom, 30)
            .transition(.scale)
    }
    
    var topInfluencerDescription: some View {
        ZStack(alignment: .bottomTrailing) {
            VStack {
                Spacer()
                HStack {
                    VStack(alignment: .leading, spacing: 6) {
                        Text("Ï†ïÌöåÏäπÏùò Smart Routine")
                            .foregroundColor(.label_900)
                            .font(.title1())
                            .padding(.bottom, 3)
                        Text("2022 Mr. ÏÑúÏö∏ÎåÄüèÜ")
                            .foregroundColor(.label_600)
                            .font(.body2())
                            .padding(.bottom, 20)
                    }
                    Spacer()
                }
                .padding(.vertical, 5)
                .padding(.leading, 20)
            }
        }
    }
    
    var bodyInformation: some View {
        HStack {
            VStack(alignment: .leading, spacing: 5) {
                Text("Ïã†Ï≤¥Ï†ïÎ≥¥")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 20)
                    .padding(.bottom, 12)
                Text("ÌÇ§: 173cm")
                    .foregroundColor(.label_800)
                    .font(.body())
                Text("Î™∏Î¨¥Í≤å: 80kg")
                    .foregroundColor(.label_800)
                    .font(.body())
            }
            Spacer()
        }
        .padding(.horizontal)
        .padding(.bottom, 10)
    }
    
    var strengthInformation: some View {
        HStack {
            VStack(alignment: .leading, spacing: 5) {
                Text("3ÎåÄ Ï§ëÎüâ")
                    .foregroundColor(.label_900)
                    .font(.headline1())
                    .padding(.top, 20)
                    .padding(.bottom, 12)
                Text("Squat: 210kg")
                    .foregroundColor(.label_800)
                    .font(.body)
                Text("Deadlift: 280kg")
                    .foregroundColor(.label_800)
                    .font(.body)
                Text("Bench Press: 140kg")
                    .foregroundColor(.label_800)
                    .font(.body)
            }
            Spacer()
        }
        .padding(.horizontal)
        .padding(.bottom, 10)
    }
}

struct RoutinePreview: View {
    var date: String = "2023ÎÖÑ 10Ïõî 15Ïùº"
    
    var body: some View {
        ZStack {
            Color.gray_900.ignoresSafeArea()
            VStack {
                HStack {
                    VStack(alignment: .leading) {
                        Divider()
                            .foregroundColor(.fill_1)
                            .padding(.top)
                        Text("Ïö¥ÎèôÏùºÏßÄ ÎØ∏Î¶¨Î≥¥Í∏∞")
                            .font(.title2())
                            .foregroundColor(.label_900)
                            .padding(.top, 30)
                        HStack {
                            Text(date)
                                .font(.body2())
                                .foregroundColor(.label_700)
                            Rectangle()
                                .frame(width: 1, height: 10)
                                .foregroundColor(.label_400)
                            Text("Îì±, Ïù¥Îëê")
                                .font(.body2())
                                .foregroundColor(.label_700)
                        }
                    }
                    .padding(.top, 20)
                    Spacer()
                }
                HStack {
                    Text("Îì±")
                        .font(.headline1())
                        .foregroundColor(.label_900)
                        .padding(.vertical, 20)
                    Spacer()
                }
                
                WorkoutExplain(ImageName: "hyperExtention", WorkoutName: "ÌïòÏù¥Ìçº ÏùµÏä§ÌÖêÏÖò", SetCount: "3ÏÑ∏Ìä∏", part: "Îì±")
                HStack(alignment: .top) {
                    Image("descriptionFace1")
                        .resizable()
                        .scaledToFit()
                        .frame(width: UIScreen.getWidth(48))
                        .padding(10)
                    VStack(alignment: .leading) {
                        Text("Ïö¥Îèô ÌåÅ ÏòàÏãú")
                            .font(.body2())
                            .foregroundColor(.label_500)
                            .padding(.bottom, 5)
                        Text("Ïö¥Îèô Ï†Ñ Í∏∞Î¶ΩÍ∑ºÏùò Î∂ÄÌïòÎ•º Ï§ÑÏó¨ Ï§Ñ Ïàò ÏûàÎäî ÌïòÏù¥Ìçº ÏùµÏä§ÌÖêÏÖòÏûÖÎãàÎã§. Îì±Ïùò ÏùºÏßÅÏÑ† ÏÉÅÏóê ÏúÑÏπò Ìï† Ïàò ÏûàÎèÑÎ°ù ÌïòÏãúÍ≥†, Í≥†Í∞úÎ•º Í≥ºÎèÑÌïòÍ≤å ÏàôÏù¥Í±∞ÎÇò Ïò¨Î¶¨ÏßÄ ÏïäÎèÑÎ°ù Ìï©ÎãàÎã§. Ïä§Ìä∏Î†àÏπ≠ÌïòÎìØ ÏàòÌñâÌï¥ Ï£ºÏÑ∏Ïöî.")
                            .font(.body())
                            .foregroundColor(.label_900)
                            .lineSpacing(5)
                    }
                    .padding(.horizontal, 13)
                    .padding(.vertical, 10)
                }
                .padding(10)
                .background {
                    RoundedRectangle(cornerRadius: 8)
                        .foregroundColor(.gray_700)
                }
                .padding(.vertical, 10)
                
                WorkoutExplain(ImageName: "dumbellPullOver", WorkoutName: "Îç§Î≤® ÌíÄ Ïò§Î≤Ñ", SetCount: "4ÏÑ∏Ìä∏", part: "Îì±")
                WorkoutExplain(ImageName: "barbellRow", WorkoutName: "Î∞îÎ≤® Î°úÏö∞", SetCount: "4ÏÑ∏Ìä∏", part: "Îì±")
                    .padding(.bottom, 3)
                HStack {
                    Text("Ïù¥Îëê")
                        .font(.headline1())
                        .foregroundColor(.label_900)
                        .padding(.vertical, 20)
                    Spacer()
                }
                WorkoutExplain(ImageName: "CloseGripLatPullDown", WorkoutName: "ÏºÄÏù¥Î∏î Ìï¥Î®∏ Ïª¨", SetCount: "3ÏÑ∏Ìä∏", part: "Ïù¥Îëê")
            }
            .padding(.bottom, 30)
            VStack {
                Spacer()
                LinearGradient(colors: [.clear, .clear, .clear, .clear, .gray_900.opacity(0.5), .gray_900], startPoint: .top, endPoint: .bottom)
            }
        }
    }
}
